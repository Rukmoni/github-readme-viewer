{"ast":null,"code":"/* export async function fetchUserRepo(name) {\n  let response = await fetch(`https://api.github.com/users/${name}/repos`);\n  let data = await response.json();\n  // dispatch(getUser('data'));\n  //let repos = getRepos(data.repos_url);\n\n  return data;\n} */\n\n/* export async function getRepos(url) {\n  let response = await fetch(url);\n  let data = await response.json();\n  return data;\n} */\n//updated repo action\nimport axios from 'axios';\nimport REPO_ACTIONS from '../store/repo/repo.actionTypes';\nimport { fetchRepos, fetchRepoSucess, fetchRepoFailure } from '../store/repo/repo.action';\nexport function loadReposSuccess(repos) {\n  return {\n    type: REPO_ACTIONS.LOAD_REPOS_SUCCESS,\n    repos\n  };\n}\nexport function fetchUserRepo(user) {\n  return function (dispatch) {\n    return axios.get(\"https://api.github.com/users/\".concat(user, \"/repos\")).then(function (repos) {\n      dispatch(loadReposSuccess(repos.data));\n      console.log(\"receiving following data: \" + repos.data);\n    }).catch(function (err) {\n      throw err;\n    });\n  };\n}\n/* export async function fetchUserRepo(user) {\n  let response = await fetch(`https://api.github.com/users/${user}/repos`);\n  let data = await response.json();\n  //console.log('data',data)\n  return data;\n} */\n//import {fetchProductsPending, fetchProductsSuccess, fetchProductsError} from 'actions';\n\n/* export function fetchUserRepo(user) {\n    return dispatch => {\n      //  dispatch(fetchProductsPending());\n        fetch(`https://api.github.com/users/${user}/repos`)\n        .then(res => res.json())\n        .then(res => {\n            if(res.error) {\n                throw(res.error);\n            }\n            dispatch(fetchRepoSucess(res.products));\n            return res.products;\n        })\n        .catch(error => {\n            dispatch(fetchRepoFailure(error));\n        })\n    }\n} */","map":{"version":3,"sources":["/Users/rukmoni/React/codesandbox/github-readme-viewer/src/controllers/api.js"],"names":["axios","REPO_ACTIONS","fetchRepos","fetchRepoSucess","fetchRepoFailure","loadReposSuccess","repos","type","LOAD_REPOS_SUCCESS","fetchUserRepo","user","dispatch","get","then","data","console","log","catch","err"],"mappings":"AAAA;;;;;;;;;AAQA;;;;;AAMA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAQC,UAAR,EAAmBC,eAAnB,EAAmCC,gBAAnC,QAA0D,2BAA1D;AACA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAEN,YAAY,CAACO,kBADhB;AAEHF,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASG,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAO,UAASC,QAAT,EAAmB;AACtB,WAAOX,KAAK,CACPY,GADE,wCACkCF,IADlC,aAEFG,IAFE,CAEG,UAAAP,KAAK,EAAI;AACXK,MAAAA,QAAQ,CAACN,gBAAgB,CAACC,KAAK,CAACQ,IAAP,CAAjB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAA6BV,KAAK,CAACQ,IAA/C;AACH,KALE,EAMFG,KANE,CAMI,UAAAC,GAAG,EAAI;AACV,YAAMA,GAAN;AACH,KARE,CAAP;AASH,GAVD;AAWD;AACD;;;;;;AAOA;;AAGA","sourcesContent":["/* export async function fetchUserRepo(name) {\n  let response = await fetch(`https://api.github.com/users/${name}/repos`);\n  let data = await response.json();\n  // dispatch(getUser('data'));\n  //let repos = getRepos(data.repos_url);\n\n  return data;\n} */\n/* export async function getRepos(url) {\n  let response = await fetch(url);\n  let data = await response.json();\n  return data;\n} */\n\n//updated repo action\nimport axios from 'axios';\nimport REPO_ACTIONS from '../store/repo/repo.actionTypes';\nimport {fetchRepos,fetchRepoSucess,fetchRepoFailure} from '../store/repo/repo.action';\nexport function loadReposSuccess(repos) {\n    return {\n        type: REPO_ACTIONS.LOAD_REPOS_SUCCESS,\n        repos\n    };\n}\n\nexport function fetchUserRepo(user) {\n  return function(dispatch) {\n      return axios\n          .get(`https://api.github.com/users/${user}/repos`)\n          .then(repos => {\n              dispatch(loadReposSuccess(repos.data));\n              console.log(\"receiving following data: \"+repos.data);\n          })\n          .catch(err => {\n              throw err;\n          });\n  };\n}\n/* export async function fetchUserRepo(user) {\n  let response = await fetch(`https://api.github.com/users/${user}/repos`);\n  let data = await response.json();\n  //console.log('data',data)\n  return data;\n} */\n\n//import {fetchProductsPending, fetchProductsSuccess, fetchProductsError} from 'actions';\n\n\n/* export function fetchUserRepo(user) {\n    return dispatch => {\n      //  dispatch(fetchProductsPending());\n        fetch(`https://api.github.com/users/${user}/repos`)\n        .then(res => res.json())\n        .then(res => {\n            if(res.error) {\n                throw(res.error);\n            }\n            dispatch(fetchRepoSucess(res.products));\n            return res.products;\n        })\n        .catch(error => {\n            dispatch(fetchRepoFailure(error));\n        })\n    }\n} */\n\n"]},"metadata":{},"sourceType":"module"}